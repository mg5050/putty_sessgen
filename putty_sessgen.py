# Michael Gonzalez 2015
# PuTTY auto-generate sessions
# MIT License

import sys
import os.path
from tkinter import *
from tkinter import filedialog
from tkinter import messagebox

AUTO_IMPORT    = False # auto import .reg file to current PC?
info_fname     = "docs/INFORMATION.txt"
logpath        = "H:\\\\Desktop\\\\Putty-logs\\\\"
presets_fname  = "presets/settings.reg"
prog_title     = "PuTTY session auto-gen"
reg_fname      = "add_session.reg"
system_prefix  = ""

init_file = open(reg_fname, 'w')
init_file.write("Windows Registry Editor Version 5.00\r\n")
init_file.close() # overwrite old file

def GUI_log(text):
    textbox.insert(INSERT, text)
def GUI_logln(text):
    GUI_log(text + '\n')

def GUI_file_dialog():
    fname = filedialog.askopenfilename()
    parse_site_file(fname)
    GUI_logln("Creating " + reg_fname + " file for manual import...")
    if(AUTO_IMPORT): GUI_add_sessions()

def GUI_info_dialog():
    root_textbox = Tk()
    root_textbox.wm_title(prog_title + " -> Help")

    main_frame = Frame(root_textbox)
    main_frame.pack(fill = BOTH, expand = YES, padx = 10, pady = 10)

    scrollbar = Scrollbar(main_frame)
    scrollbar.pack(side = RIGHT, fill=Y)

    textbox = Text(main_frame, yscrollcommand = scrollbar.set)

    sfile = open(info_fname, 'r')
    for line in sfile:
        textbox.insert(INSERT, line)
    sfile.close()

    textbox.pack(fill = BOTH, expand = YES)
    root_textbox.mainloop()

def GUI_confirm_dialog():
    return messagebox.askokcancel("Confirm", "Are you sure?")

def delete_sessions():
    os.system(system_prefix + "reg delete HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions /f")

def GUI_delete_sessions():
    if(GUI_confirm_dialog()): 
        GUI_logln("Removing sessions from registry...")
        delete_sessions()

def add_sessions():
    os.system(system_prefix + "reg import " + reg_fname)
    #os.remove(reg_fname)

def GUI_add_sessions(): # automatic registry import
    GUI_logln("Importing sessions to registry...")
    add_sessions()

def GUI_launch():
    root = Tk()
    root.geometry('325x450')
    root.resizable(width = FALSE, height = FALSE)
    root.wm_title(prog_title)

    # Main frame
    main_frame = Frame(root)
    main_frame.pack(fill = BOTH, expand = YES, padx = 10)

    # Buttons
    button_frame = Frame(main_frame)
    button_frame.pack(fill = X, expand = YES, pady = 10)
    button_info = Button(button_frame, text = "Help", command = GUI_info_dialog)
    button_info.pack(fill = BOTH)
    button_clearreg = Button(button_frame, text = "Delete ALL Saved Sessions from PuTTY", command = GUI_delete_sessions)
    button_clearreg.pack(fill = BOTH)
    button_fname = Button(button_frame, text = "Create .reg file with PuTTY Sessions from file", command = GUI_file_dialog)
    button_fname.pack(fill = BOTH)

    # Label
    label_frame = Frame(main_frame)
    label_frame.pack(fill = X)
    label = Label(label_frame, text = "Output:")
    label.pack(side = LEFT)
    Button(label_frame, text = "Quit", command = exit).pack(side = RIGHT)

    # Box
    box_frame = Frame(main_frame)
    box_frame.pack(fill = BOTH, expand = YES, pady = (5, 10))
    global textbox
    scrollbar = Scrollbar(box_frame)
    scrollbar.pack(side = RIGHT, fill=Y)
    textbox = Text(box_frame, yscrollcommand = scrollbar.set)
    textbox.pack(fill = BOTH, expand = YES)

    GUI_logln("Default log file path: " + logpath)
    if not(os.path.isdir(logpath)):
        GUI_logln("ERROR: Log file path does not exist.")
    root.mainloop()

def parse_site_file(filename):
    sfile = open(filename, 'r')
    sites = ""
    GUI_logln("Creating PuTTY session for sites:")
    for line in sfile:
        lsplit = line.split()
        if(line[:1] == '#' or len(lsplit) != 2): continue # skip comment or malformed lines
        siteid, host = lsplit
        sites += siteid + ', '
        add_regkey(siteid, host)
    GUI_logln("---- " + sites.strip(" ,"))

def add_regkey(siteid, host):
    content =   [
                    "\n; Auto-generated by sess_gen.py\n",
                    "[HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions\\" + siteid + ']',
                    "\"HostName\"=\"" + host + '\"',
                    "\"LogFileName\"=\"" + logpath + siteid + "_&M_&D_&Y.log\"",
                    "\"WinTitle\"=\"" + siteid + '\"'
                ]

    target = open(reg_fname, 'a')

    for line in content:
        target.write(line + '\n')

    presets = open(presets_fname, 'r')
    target.write(presets.read())
    target.write('\n')

    target.close()
    presets.close()

print("Default log file path: " + logpath)
if not(os.path.isdir(logpath)):
    print("ERROR: Log file path does not exist.")
if(len(sys.argv) != 3): 
    if(len(sys.argv) == 2 and os.path.isfile(sys.argv[1])): # specifying a batch file?
        parse_site_file(sys.argv[1])
    else:
        GUI_launch()
        print("USAGE:")
        print("\tpython " + sys.argv[0] + " SITEID IPADDRESS")
        print("\tpython " + sys.argv[0] + " BATCH_FILENAME")
else: 
    add_regkey(sys.argv[1], sys.argv[2])
    add_sessions()

"""
The MIT License (MIT)

Copyright (c) 2015 Michael Gonzalez

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
"""